// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using armadieti2.Models;

#nullable disable

namespace armadieti2.Migrations.Postgres
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20250414153113_movimentos")]
    partial class movimentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("armadieti2.Models.Chiave", b =>
                {
                    b.Property<int>("Numerochiave")
                        .HasColumnType("integer")
                        .HasColumnName("numerochiave");

                    b.HasKey("Numerochiave")
                        .HasName("chiave_pkey");

                    b.ToTable("chiave", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Dipartimento", b =>
                {
                    b.Property<string>("Nomedipartimento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomedipartimento");

                    b.HasKey("Nomedipartimento")
                        .HasName("dipartimento_pkey");

                    b.ToTable("dipartimento", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Location", b =>
                {
                    b.Property<int>("Idlocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idlocation");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idlocation"));

                    b.Property<string>("Piano")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("piano");

                    b.Property<string>("Stabile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("stabile");

                    b.HasKey("Idlocation")
                        .HasName("location_pkey");

                    b.HasIndex(new[] { "Stabile", "Piano" }, "location_stabile_piano_key")
                        .IsUnique();

                    b.ToTable("location", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Mobilio", b =>
                {
                    b.Property<int>("Idmobilio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmobilio");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmobilio"));

                    b.Property<int>("Idlocation")
                        .HasColumnType("integer")
                        .HasColumnName("idlocation");

                    b.Property<int>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<int>("Numerochiave")
                        .HasColumnType("integer")
                        .HasColumnName("numerochiave");

                    b.Property<string>("Statomobilio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("statomobilio");

                    b.Property<string>("Tipomobilio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipomobilio");

                    b.HasKey("Idmobilio")
                        .HasName("mobilio_pkey");

                    b.HasIndex("Numerochiave");

                    b.HasIndex("Statomobilio");

                    b.HasIndex("Tipomobilio");

                    b.HasIndex(new[] { "Idlocation", "Numero" }, "mobilio_idlocation_numero_key")
                        .IsUnique();

                    b.ToTable("mobilio", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Movimento", b =>
                {
                    b.Property<int>("Idmovimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmovimento");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmovimento"));

                    b.Property<decimal>("Cauzione")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("cauzione");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<int>("Idnoleggio")
                        .HasColumnType("integer")
                        .HasColumnName("idnoleggio");

                    b.Property<string>("Pagamento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("pagamento");

                    b.HasKey("Idmovimento")
                        .HasName("movimento_pkey");

                    b.HasIndex("Idnoleggio");

                    b.HasIndex("Pagamento");

                    b.ToTable("movimento", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Noleggio", b =>
                {
                    b.Property<int>("Idnoleggio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idnoleggio");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idnoleggio"));

                    b.Property<bool?>("Attivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("attivo");

                    b.Property<DateOnly>("Datafine")
                        .HasColumnType("date")
                        .HasColumnName("datafine");

                    b.Property<DateOnly>("Datainizio")
                        .HasColumnType("date")
                        .HasColumnName("datainizio");

                    b.Property<int>("Idmobilio")
                        .HasColumnType("integer")
                        .HasColumnName("idmobilio");

                    b.Property<int>("Idpersona")
                        .HasColumnType("integer")
                        .HasColumnName("idpersona");

                    b.HasKey("Idnoleggio")
                        .HasName("noleggio_pkey");

                    b.HasIndex("Idpersona");

                    b.HasIndex(new[] { "Idmobilio", "Datainizio", "Datafine" }, "noleggio_idmobilio_datainizio_datafine_key")
                        .IsUnique();

                    b.ToTable("noleggio", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Persona", b =>
                {
                    b.Property<int>("Idpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idpersona");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idpersona"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cognome");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Idmonitor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("idmonitor");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Nomedipartimento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nomedipartimento");

                    b.Property<string>("Tipopersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipopersona");

                    b.HasKey("Idpersona")
                        .HasName("persona_pkey");

                    b.HasIndex("Nomedipartimento");

                    b.HasIndex("Tipopersona");

                    b.HasIndex(new[] { "Email" }, "persona_email_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Idmonitor" }, "persona_idmonitor_key")
                        .IsUnique();

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Statomobilio", b =>
                {
                    b.Property<string>("Statomobilio1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("statomobilio");

                    b.HasKey("Statomobilio1")
                        .HasName("statomobilio_pkey");

                    b.ToTable("statomobilio", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Tipomobilio", b =>
                {
                    b.Property<string>("Tipomobilio1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipomobilio");

                    b.HasKey("Tipomobilio1")
                        .HasName("tipomobilio_pkey");

                    b.ToTable("tipomobilio", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Tipopagamento", b =>
                {
                    b.Property<string>("Pagamento")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("pagamento");

                    b.HasKey("Pagamento")
                        .HasName("tipopagamento_pkey");

                    b.ToTable("tipopagamento", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Tipopersona", b =>
                {
                    b.Property<string>("Tipopersona1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipopersona");

                    b.HasKey("Tipopersona1")
                        .HasName("tipopersona_pkey");

                    b.ToTable("tipopersona", (string)null);
                });

            modelBuilder.Entity("armadieti2.Models.Mobilio", b =>
                {
                    b.HasOne("armadieti2.Models.Location", "IdlocationNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Idlocation")
                        .IsRequired()
                        .HasConstraintName("mobilio_idlocation_fkey");

                    b.HasOne("armadieti2.Models.Chiave", "NumerochiaveNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Numerochiave")
                        .IsRequired()
                        .HasConstraintName("mobilio_numerochiave_fkey");

                    b.HasOne("armadieti2.Models.Statomobilio", "StatomobilioNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Statomobilio")
                        .IsRequired()
                        .HasConstraintName("mobilio_statomobilio_fkey");

                    b.HasOne("armadieti2.Models.Tipomobilio", "TipomobilioNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Tipomobilio")
                        .IsRequired()
                        .HasConstraintName("mobilio_tipomobilio_fkey");

                    b.Navigation("IdlocationNavigation");

                    b.Navigation("NumerochiaveNavigation");

                    b.Navigation("StatomobilioNavigation");

                    b.Navigation("TipomobilioNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Movimento", b =>
                {
                    b.HasOne("armadieti2.Models.Noleggio", "IdnoleggioNavigation")
                        .WithMany("Movimentos")
                        .HasForeignKey("Idnoleggio")
                        .IsRequired()
                        .HasConstraintName("movimento_idnoleggio_fkey");

                    b.HasOne("armadieti2.Models.Tipopagamento", "PagamentoNavigation")
                        .WithMany("Movimentos")
                        .HasForeignKey("Pagamento")
                        .IsRequired()
                        .HasConstraintName("movimento_pagamento_fkey");

                    b.Navigation("IdnoleggioNavigation");

                    b.Navigation("PagamentoNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Noleggio", b =>
                {
                    b.HasOne("armadieti2.Models.Mobilio", "IdmobilioNavigation")
                        .WithMany("Noleggios")
                        .HasForeignKey("Idmobilio")
                        .IsRequired()
                        .HasConstraintName("noleggio_idmobilio_fkey");

                    b.HasOne("armadieti2.Models.Persona", "IdpersonaNavigation")
                        .WithMany("Noleggios")
                        .HasForeignKey("Idpersona")
                        .IsRequired()
                        .HasConstraintName("noleggio_idpersona_fkey");

                    b.Navigation("IdmobilioNavigation");

                    b.Navigation("IdpersonaNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Persona", b =>
                {
                    b.HasOne("armadieti2.Models.Dipartimento", "NomedipartimentoNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("Nomedipartimento")
                        .IsRequired()
                        .HasConstraintName("persona_nomedipartimento_fkey");

                    b.HasOne("armadieti2.Models.Tipopersona", "TipopersonaNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("Tipopersona")
                        .IsRequired()
                        .HasConstraintName("persona_tipopersona_fkey");

                    b.Navigation("NomedipartimentoNavigation");

                    b.Navigation("TipopersonaNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Chiave", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Dipartimento", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("armadieti2.Models.Location", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Mobilio", b =>
                {
                    b.Navigation("Noleggios");
                });

            modelBuilder.Entity("armadieti2.Models.Noleggio", b =>
                {
                    b.Navigation("Movimentos");
                });

            modelBuilder.Entity("armadieti2.Models.Persona", b =>
                {
                    b.Navigation("Noleggios");
                });

            modelBuilder.Entity("armadieti2.Models.Statomobilio", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Tipomobilio", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Tipopagamento", b =>
                {
                    b.Navigation("Movimentos");
                });

            modelBuilder.Entity("armadieti2.Models.Tipopersona", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
