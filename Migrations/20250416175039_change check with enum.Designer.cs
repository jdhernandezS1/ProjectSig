// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using armadieti2.Models;

#nullable disable

namespace armadieti2.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20250416175039_change check with enum")]
    partial class changecheckwithenum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("armadieti2.Models.Chiave", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Numerochiave")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Chiaves");
                });

            modelBuilder.Entity("armadieti2.Models.Dipartimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nomedipartimento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dipartimentos");
                });

            modelBuilder.Entity("armadieti2.Models.Location", b =>
                {
                    b.Property<int>("Idlocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idlocation"));

                    b.Property<string>("Piano")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Stabile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Idlocation");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("armadieti2.Models.Mobilio", b =>
                {
                    b.Property<int>("Idmobilio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmobilio"));

                    b.Property<int>("Idlocation")
                        .HasColumnType("integer");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<int>("Numerochiave")
                        .HasColumnType("integer");

                    b.Property<int>("Statomobilio")
                        .HasColumnType("integer");

                    b.Property<int>("Tipomobilio")
                        .HasColumnType("integer");

                    b.HasKey("Idmobilio");

                    b.HasIndex("Idlocation");

                    b.HasIndex("Numerochiave");

                    b.HasIndex("Statomobilio");

                    b.HasIndex("Tipomobilio");

                    b.ToTable("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Movimento", b =>
                {
                    b.Property<int>("Idmovimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmovimento"));

                    b.Property<decimal>("Cauzione")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Idnoleggio")
                        .HasColumnType("integer");

                    b.Property<int>("Pagamento")
                        .HasColumnType("integer");

                    b.HasKey("Idmovimento");

                    b.HasIndex("Idnoleggio");

                    b.HasIndex("Pagamento");

                    b.ToTable("Movimentos");
                });

            modelBuilder.Entity("armadieti2.Models.Noleggio", b =>
                {
                    b.Property<int>("Idnoleggio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idnoleggio"));

                    b.Property<DateTime>("Datafine")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Datainizio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Idmobilio")
                        .HasColumnType("integer");

                    b.Property<int>("Idpersona")
                        .HasColumnType("integer");

                    b.Property<int>("StatoAttivo")
                        .HasColumnType("integer");

                    b.HasKey("Idnoleggio");

                    b.HasIndex("Idmobilio");

                    b.HasIndex("Idpersona");

                    b.ToTable("Noleggios");
                });

            modelBuilder.Entity("armadieti2.Models.Persona", b =>
                {
                    b.Property<int>("Idpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idpersona"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Dipartimento")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Idmonitor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tipopersona")
                        .HasColumnType("integer");

                    b.HasKey("Idpersona");

                    b.HasIndex("Dipartimento");

                    b.HasIndex("Tipopersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("armadieti2.Models.Statomobilio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Statomobilio1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Statomobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Tipomobilio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("Tipomobilio1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Tipomobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Tipopagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Pagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tipopagamentos");
                });

            modelBuilder.Entity("armadieti2.Models.Tipopersona", b =>
                {
                    b.Property<int>("IdTiPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTiPersona"));

                    b.Property<string>("Tipopersona1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdTiPersona");

                    b.ToTable("Tipopersonas");
                });

            modelBuilder.Entity("armadieti2.Models.Mobilio", b =>
                {
                    b.HasOne("armadieti2.Models.Location", "IdlocationNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Idlocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("armadieti2.Models.Chiave", "NumerochiaveNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Numerochiave")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("armadieti2.Models.Statomobilio", "StatomobilioNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Statomobilio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("armadieti2.Models.Tipomobilio", "TipomobilioNavigation")
                        .WithMany("Mobilios")
                        .HasForeignKey("Tipomobilio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdlocationNavigation");

                    b.Navigation("NumerochiaveNavigation");

                    b.Navigation("StatomobilioNavigation");

                    b.Navigation("TipomobilioNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Movimento", b =>
                {
                    b.HasOne("armadieti2.Models.Noleggio", "IdnoleggioNavigation")
                        .WithMany("Movimentos")
                        .HasForeignKey("Idnoleggio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("armadieti2.Models.Tipopagamento", "PagamentoNavigation")
                        .WithMany("Movimentos")
                        .HasForeignKey("Pagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdnoleggioNavigation");

                    b.Navigation("PagamentoNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Noleggio", b =>
                {
                    b.HasOne("armadieti2.Models.Mobilio", "IdmobilioNavigation")
                        .WithMany("Noleggios")
                        .HasForeignKey("Idmobilio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("armadieti2.Models.Persona", "IdpersonaNavigation")
                        .WithMany("Noleggios")
                        .HasForeignKey("Idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdmobilioNavigation");

                    b.Navigation("IdpersonaNavigation");
                });

            modelBuilder.Entity("armadieti2.Models.Persona", b =>
                {
                    b.HasOne("armadieti2.Models.Dipartimento", "NomedipartimentoNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("Dipartimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("armadieti2.Models.Tipopersona", "Tipopersonas")
                        .WithMany("Personas")
                        .HasForeignKey("Tipopersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NomedipartimentoNavigation");

                    b.Navigation("Tipopersonas");
                });

            modelBuilder.Entity("armadieti2.Models.Chiave", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Dipartimento", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("armadieti2.Models.Location", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Mobilio", b =>
                {
                    b.Navigation("Noleggios");
                });

            modelBuilder.Entity("armadieti2.Models.Noleggio", b =>
                {
                    b.Navigation("Movimentos");
                });

            modelBuilder.Entity("armadieti2.Models.Persona", b =>
                {
                    b.Navigation("Noleggios");
                });

            modelBuilder.Entity("armadieti2.Models.Statomobilio", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Tipomobilio", b =>
                {
                    b.Navigation("Mobilios");
                });

            modelBuilder.Entity("armadieti2.Models.Tipopagamento", b =>
                {
                    b.Navigation("Movimentos");
                });

            modelBuilder.Entity("armadieti2.Models.Tipopersona", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
